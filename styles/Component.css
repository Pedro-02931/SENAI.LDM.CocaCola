/* 
# Ola üññ
A neuroanatomia da percep√ß√£o visual n√£o √© um mero sistema passivo de captura de imagens, mas uma rede de processamento massivamente paralela, orquestrada pelo c√≥rtex visual (V1-V5), col√≠culos superiores e √°reas associativas. 

1. Arquitetura Cortical e Renderiza√ß√£o Perceptual
√Årea V1 (C√≥rtex Visual Prim√°rio): Atua como um processador de bordas, contraste e padr√µes b√°sicos. O reset elimina inconsist√™ncias na defini√ß√£o de margens e estrutura visual.
√Årea V2 e V3: S√£o respons√°veis pela integra√ß√£o de cores, movimento e profundidade. A calibra√ß√£o crom√°tica com HSL evita desvios perceptivos, mantendo um contraste neural otimizado.
√Årea V4: Processa a percep√ß√£o de cor em n√≠vel abstrato. A teoria da oposi√ß√£o de cores aplicada no CSS sincroniza a interpreta√ß√£o dos cones L/M/S.
√Årea V5/MT (Movimento): As transi√ß√µes suaves (450ms) evitam efeitos abruptos, sincronizando mudan√ßas com a resposta temporal dos neur√¥nios motores oculares.
Col√≠culos Superiores: Controlam reflexos visuais e tracking de movimento. A anima√ß√£o metal-shine trabalha em 8s c√≠clicos, simulando um est√≠mulo de baixo n√≠vel subliminar.
2. Profundidade Binocular e Camadas Estratificadas
O sistema visual humano utiliza disparidade binocular para inferir profundidade, simulada aqui pelo depth-shadow e pelo fundo radial. Isso otimiza a hierarquia de camadas (background, foreground, e efeitos de sobreposi√ß√£o).

3. Fus√£o Retiniana e Aten√ß√£o Seletiva
Os ajustes de brilho, contraste e satura√ß√£o controlam a competi√ß√£o interocular, reduzindo fadiga perceptual. O mix-blend-mode: difference no texto refor√ßa a diferencia√ß√£o figura-fundo, reduzindo interfer√™ncias.
*/

/*==============================================================================*/
/* RESET NEURO-LIMPO */


* {
    /*
    O objetivo do reset neuro-limpo √© reduzir o ru√≠do visual acumulado e fornecer um ponto de partida otimizado para o processamento da interface al√©m de definir um estado inicial de alta performance.
    */
    /*
    - Refor√ßo de padr√µes para interfaces de alto desempenho
    - Integra√ß√£o de diretrizes para reduzir ru√≠dos visuais
    - Compatibilidade ampliada com dispositivos modernos e antigos
    */
    padding: 0; 
    margin: 0;
    box-sizing: border-box; 
    scroll-behavior: smooth;
    will-change: background;
    transform: translateZ(0); /* Acelera√ß√£o GPU */
}
/*
O corpo da p√°gina ocupa a tela inteira e √© flex, pra que tudo se encaixe como num circuito neural de alta performance. A transi√ß√£o do background segue o tempo neural, sincronizando com a vis√£o humana ‚Äì r√°pido e fluido.

Resumindo:
- Cria uma base altamente responsiva, ideal para diferentes tamanhos de tela.
- Facilita o fluxo natural de leitura e intera√ß√£o gra√ßas √† organiza√ß√£o vertical.
- Minimiza a fadiga visual ao aplicar transi√ß√µes sincronizadas com os tempos de processamento do sistema visual humano.
*/
body {
    /* 
    - Configura o layout como uma coluna que orienta o olhar de cima para baixo, aproveitando a forma natural como o ser humano l√™ e interpreta informa√ß√µes visuais.
    - Garante que o corpo da p√°gina ocupe 100% da largura (100vw) e 100% da altura (100vh) da janela de visualiza√ß√£o do navegador. Isso elimina espa√ßos n√£o utilizados, maximizando o uso do espa√ßo dispon√≠vel na tela.
    - Refere-se ao alinhamento da transi√ß√£o visual (background) com o tempo m√©dio de resposta visual (~450ms), criando uma experi√™ncia de navega√ß√£o mais suave e menos cansativa.
        + Elas imitam o comportamento natural do sistema visual humano ao processar mudan√ßas gradativas, reduzindo o impacto abrupto nas percep√ß√µes do usu√°rio.
        - Intera√ß√µes diretas de toque, como rolagem ou gestos simples, devem ser permitidas. 
        + Desativa a√ß√µes padr√£o extras, como zoom ou gestos avan√ßados que poderiam ocorrer em dispositivos m√≥veis.
        + Previne "delay de 300ms" que acontecia em dispositivos m√≥veis antes de processar cliques/tap deixando a intera√ß√£o mais r√°pida e responsiva.
        + Melhora significativamente a experi√™ncia do usu√°rio ao eliminar atrasos e priorizar intera√ß√µes flu√≠das.
    - Evitar que o navegador mostre aquele "rebote" ou "bouncing" ao rolar para al√©m dos limites de uma p√°gina ou elemento. 
        + Em dispositivos m√≥veis, isso normalmente aparece como um efeito de elasticidade.
        + Remove comportamentos visuais que podem distrair ou parecer inconsistentes, especialmente em interfaces onde o conte√∫do deve ser fixo.
        + Proporciona um comportamento mais previs√≠vel, eliminando o "feedback visual de excesso" que pode ser confuso para os usu√°rios.
    */
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    transition: background var(--neural-transition);
    touch-action: manipulation; 
    overscroll-behavior: none; 
    min-height: 100vh;
}

/* 
Cabe√ßalho e rodap√© t√™m layout fixo, com alinhamento que lembra os ritmos de disparos sin√°pticos. A transi√ß√£o suave evita picos bruscos ‚Äì igual o c√©rebro ajustando seu foco sem surtar. T√° calibrado pra n√£o estourar a vis√£o.

Resumindo:
- Facilita a navega√ß√£o e leitura, reduzindo o esfor√ßo cognitivo do usu√°rio.
- Cria um layout visualmente atraente, organizado e responsivo.
- Oferece uma experi√™ncia confort√°vel e intuitiva, aproveitando transi√ß√µes suaves que imitam padr√µes de processamento do sistema visual humano.
*/
header {
    top: 0;  /* Fixa o cabe√ßalho no topo */
    left: 0;
    right: 0;
}

/* FOOTER (rodap√© fixo) */
footer {
    bottom: 0; /* Fixa o rodap√© na parte inferior */
    left: 0;
    right: 0;
}
header, footer {
    /*
    - Ativa√ß√£o top-down com sincronia neural:
        + Refere-se ao fato de que o c√©rebro humano processa informa√ß√µes visuais de forma hier√°rquica e prioriza elementos como cabe√ßalhos no topo da interface. 
        + Isso aproveita o foco inicial que a retina aplica √† parte superior da p√°gina.
        + Sincronizar esses elementos com transi√ß√µes suaves respeita o ritmo natural do c√©rebro ao captar mudan√ßas (evitando "choques visuais").
    
    - Altura fixa para previsibilidade retiniana:
        + Define uma altura consistente para os elementos de cabe√ßalho e rodap√© (height: 100px), garantindo que o usu√°rio saiba exatamente onde procurar por informa√ß√µes importantes. 
        + Essa previsibilidade reduz o esfor√ßo cognitivo durante a navega√ß√£o.
    
    - Alinhamento espacial otimizado para varredura visual:
        + Usa alinhamentos (justify-content: space-between;) para que os olhos se movam eficientemente entre informa√ß√µes no cabe√ßalho ou rodap√©, como t√≠tulos e √≠cones.
    
    - Tamanho do texto principal:
        + Tamanho relativo de 1.5rem para garantir legibilidade e destaque.
    */
    background: transparent !important; /* Garantir que seja transparente sempre */
    z-index: 10;
    width: 100%;
    position: fixed;
    height: 100px;
    color: var(--text-light);
    display: flex;
    font-size: 1.5rem;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
    transition: background var(--neural-transition);
    text-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
    visibility: visible !important;
    opacity: 1 !important;

}


/* 
O main √© o centro de comando, onde a performance visual rola. Centralizado e com transi√ß√£o afinada, ele cria um ambiente visual sem ru√≠do, permitindo que o c√©rebro se concentre no conte√∫do, assim como um algoritmo HPC que filtra o sinal do ru√≠do.

Resumindo:
- Essa configura√ß√£o faz do main um ponto central, com foco visual imediato gra√ßas ao alinhamento central e √†s transi√ß√µes suaves.
- Propriedades como flex-grow e display: flex garantem que o layout se ajuste automaticamente a diferentes tamanhos de tela.
- A centraliza√ß√£o e o uso de transi√ß√µes conferem um design minimalista e funcional.
- Otimiza o desempenho e a responsividade do layout em diferentes dispositivos e tamanhos de tela.
- Reduz a carga visual com transi√ß√µes suaves e alinhamentos harmoniosos.
*/
main {
    /*
    - √Årea principal de foco com prioriza√ß√£o m√°xima:
        + Indica que a se√ß√£o main √© o ponto central da interface, onde os usu√°rios direcionam maior aten√ß√£o.
        + Elementos importantes, como conte√∫do principal ou imagens destacadas, s√£o esperados aqui.
    - Crescimento flex√≠vel adaptativo:
        + Utiliza a propriedade flex-grow: 1;, permitindo que o main ocupe o espa√ßo restante dispon√≠vel no cont√™iner pai, ajustando-se dinamicamente ao layout.
    + Posicionamento relativo para camadas sobrepostas:
        + Define position: relative;, permitindo posicionar elementos dentro do main (ou pseudo-elementos) de forma independente, usando propriedades como top, left, etc., enquanto mant√©m o fluxo normal do documento.
    */
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transition: background var(--neural-transition);
}

/*==============================================================================*/
/* VARI√ÅVEIS NEUROCROM√ÅTICAS 
Aqui, o script mostra a base do neurodesign: define as cores com HSL pra estimular os cones (cone L no vermelho, cone S no azul), garantindo contraste e efeito visual cabuloso. As vari√°veis s√£o tipo um dicion√°rio de sinapses ‚Äì cada cor e sombra √© escolhida pra maximizar a resposta neural e criar profundidade binocular. A transi√ß√£o √© calibrada como o tempo que seu c√©rebro leva pra dar aquele "a√≠, entendi!" com suavidade.

Resumindo:
- Cores otimizadas para os cones L/M/S da retina, maximizando contraste e percep√ß√£o.
- Sombras que simulam profundidade binocular, ajudando na hierarquia visual.
- Transi√ß√µes suaves que respeitam os tempos naturais de percep√ß√£o do usu√°rio.
*/
:root {
    /* 
    - As vari√°veis --coke-red, --pepsi-blue e --text-light utilizam o modelo de cor HSL para representar cores de forma perceptualmente uniforme:
        --coke-red:    
            + Um vermelho vibrante ajustado para ativar os cones L (longos), respons√°veis por captar tons avermelhados.
            + Aplica√ß√£o: Excelente para temas energ√©ticos e de alta visibilidade (Coca-Cola).
        --pepsi-blue:
            + Um azul escuro e saturado, ideal para estimular os cones S (curtos), respons√°veis por tons azulados.
            + Aplica√ß√£o: Refor√ßa o branding da Pepsi e cria contraste visual com tons quentes.
        --text-light:
            + Um branco puro, otimizado para gerar contraste com qualquer fundo. 
            + Reduz o esfor√ßo cognitivo durante a leitura, refor√ßando a legibilidade.
    */
    --coke-red: hsl(359, 68%, 48%);       /* Ativa√ß√£o m√°xima do cone L (560nm) */
    --pepsi-blue: hsl(221, 100%, 14%);    /* Estimula√ß√£o do cone S (420nm) */
    --text-light: hsl(0, 0%, 100%);       /* Branco puro para contraste neural */
    
    /*
    - Sistema de profundidade binocular (disparidade 3D):
        + 0 2px 4px rgba(0,0,0,0.15): Sombra externa mais leve.
        + 0 1px 2px rgba(0,0,0,0.1): Sombra interna mais sutil.
    - Simula disparidade binocular, que √© a diferen√ßa de percep√ß√£o entre os dois olhos, ajudando a criar uma sensa√ß√£o de hierarquia visual e destaque.
    */
    --depth-shadow: 0 2px 4px rgba(0,0,0,0.15), 0 1px 2px rgba(0,0,0,0.1);
    
    /* 
    - Transi√ß√£o neural: 450ms para sincronia com processamento visual:
        + Esse padr√£o √© inspirado em como nossos olhos rastreiam movimentos suaves e naturais, evitando mudan√ßas abruptas.
    - Cria uma experi√™ncia visual fluida e menos cansativa, sincronizando com o tempo m√©dio de processamento visual (cerca de 400-500ms)
    */
    --neural-transition: 0.45s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}




/* OTIMIZA√á√ïES DE PERFORMANCE PARA GRADIENTES */
/* 
A logo de fundo √© configurada pra ser uma sombra, tipo aquele sussurro visual que ativa as camadas profundas do processamento. A opacidade baixa e os filtros pesados s√£o a tradu√ß√£o do efeito de ‚Äúru√≠do‚Äù controlado, otimizando o contraste e evitando overload sensorial.

Resumindo:
- A baixa opacidade, junto com os filtros, cria um efeito visual que o c√©rebro processa em segundo plano, ativando √°reas associadas √† identidade visual da marca sem distra√ß√£o direta.
- Filtros como contraste e brilho aumentados trabalham com a via magnocelular, respons√°vel por captar rapidamente mudan√ßas de movimento e ilumina√ß√£o.
*/
.background-logo {
    /*
    - Faz com que o logo seja posicionado em rela√ß√£o ao seu cont√™iner pai, permitindo que ele ocupe uma posi√ß√£o fixa e independente.
    - Garante que o logo ocupe toda a largura dispon√≠vel, enquanto controla sua altura m√°xima para evitar distor√ß√£o ou sobreposi√ß√£o indesejada.
    - Centraliza o logo dentro do cont√™iner, criando uma sensa√ß√£o de equil√≠brio visual.
    - Expande o posicionamento para ocupar todo o espa√ßo dispon√≠vel no cont√™iner.
    - Coloca o logo em uma camada mais baixa, permitindo que outros elementos (como texto ou conte√∫do principal) fiquem por cima.
    - Reduz a opacidade do logo, tornando-o quase impercept√≠vel, mas ainda presente.
        + Isso √© pensado para trabalhar em n√≠vel subconsciente com o usu√°rio, influenciando sem distra√ß√£o direta.
    - Aplica v√°rias intensifica√ß√µes visuais ao logo:
        + brightness(180%): Aumenta o brilho, tornando-o mais chamativo.
        + contrast(100%): Amplifica diferen√ßas entre luz e escurid√£o.
        + grayscale(100%): Remove cores, transformando o logo em preto e branco.
        + drop-shadow: Adiciona uma sombra que refor√ßa o impacto visual.
        Garante que mudan√ßas na opacidade ocorram de forma suave, utilizando a vari√°vel --neural-transition para sincronizar com o tempo de processamento visual humano.
    */
    position: absolute;
    width: 100%; max-height: 100%;
    margin: auto;
    top: 0; left: 0; right: 0; bottom: 0;
    z-index: 1;
    opacity: 0.2;
    filter: 
        brightness(180%) 
        contrast(100%) 
        grayscale(100%)
        drop-shadow(0 0 4px rgba(0, 82, 165, 0.7));
    transition: opacity var(--neural-transition);
}

/* 
A container de conte√∫do organiza a informa√ß√£o de forma clara e fluida ‚Äì como sinapses alinhando impulsos el√©tricos. A separa√ß√£o entre os elementos (gap) √© crucial pra evitar colis√µes de informa√ß√£o, otimizando a transmiss√£o dos dados visuais.

Resumindo:
- A combina√ß√£o com gap e o alinhamento central, ajuda a organizar visualmente o conte√∫do de forma limpa e l√≥gica, semelhante ao funcionamento das sinapses cerebrais. 
- Cada elemento (ou dado visual) √© devidamente espa√ßado e alinhado, permitindo que a interface seja compreendida rapidamente, sem "ru√≠dos" ou sobrecarga visual.
*/
.content-container {
    /*
    - Organizar a informa√ß√£o de forma clara e fluida:
        + Isso reflete a fun√ß√£o principal do cont√™iner (.content-container), que organiza os elementos de forma alinhada e bem distribu√≠da dentro da p√°gina.
        + A abordagem clara e fluida ajuda os olhos do usu√°rio a navegar pelo conte√∫do sem distra√ß√µes ou sobrecargas visuais.
    - Sinapses alinhando impulsos el√©tricos:
        + As sinapses no c√©rebro conectam diferentes regi√µes para transmitir informa√ß√µes de forma eficiente.
        + O uso de flex e gap no cont√™iner simula essa l√≥gica: cada elemento (ou "sinapse") est√° devidamente alinhado e espa√ßado para facilitar o fluxo e evitar "colis√µes de informa√ß√µes" (sobreposi√ß√£o ou confus√£o visual).
    */
    display: flex;
    align-items: center;
    gap: 20px;
    z-index: 3;
    position: relative;
}

/* 
O texto recebe o tratamento de um neurotransmissor ‚Äì grande, impactante e com sombra para dar profundidade. A transi√ß√£o de todas as propriedades mant√©m a fluidez visual, como um pipeline HPC que minimiza lat√™ncia.

Resumindo:
- O texto √© claramente projetado para ser uma pe√ßa central do design, com caracter√≠sticas que destacam sua presen√ßa enquanto permanecem suaves e fluidas durante altera√ß√µes visuais.
- √â ideal para t√≠tulos, mensagens de impacto ou qualquer elemento que precise se destacar sem sobrecarregar o layout.
*/
.content-text {
    /*
    - Tratamento de um neurotransmissor:
        + O tamanho e o estilo do texto s√£o concebidos para chamar a aten√ß√£o imediatamente, como um impulso neural que transporta informa√ß√µes cr√≠ticas de forma eficiente.
    - Sombra para dar profundidade:
        + A aplica√ß√£o de text-shadow cria um efeito tridimensional sutil, semelhante √† profundidade que o c√©rebro interpreta em varia√ß√µes de luz e contraste.
    - Pipeline HPC que minimiza lat√™ncia:
        + A transi√ß√£o suave nas propriedades do texto remete √† fluidez de dados em um sistema de alta performance, eliminando "choques visuais" que poderiam interromper a experi√™ncia do usu√°rio.
    */
    color: var(--text-light);
    font-size: 4rem;
    width: 240px;
    text-align: left;
    text-shadow: var(--depth-shadow);
    transition: all var(--neural-transition);
    margin: 0;
}

/* 
A imagem tem alta responsividade com transi√ß√£o suave no transform, como se ajustasse em tempo real ao refresh do seu processador neural. √â HPC aplicada ao front-end: sem gambiarras, direto e preciso.
*/
.content-image {
    /*
    - Define a altura da imagem como 85% da altura da viewport (vh = viewport height)fazendo com que a imagem se ajuste dinamicamente ao tamanho da tela, garantindo uma apresenta√ß√£o visual consistente em diferentes dispositivos.
    - O tempo da transi√ß√£o √© ajustado para 0,4 segundos, o que proporciona um equil√≠brio entre fluidez e rapidez.
    - Define a curva de anima√ß√£o para controlar a acelera√ß√£o e desacelera√ß√£o.
        + Come√ßo e fim suaves, com uma acelera√ß√£o percept√≠vel no meio.
        + Ideal para anima√ß√µes naturais, simulando o comportamento f√≠sico real.
    - Posiciona a imagem em uma camada acima de outros elementos com z-index menor (como fundos ou decora√ß√µes).
        + Isso √© essencial para garantir que a imagem esteja vis√≠vel e funcional em contextos onde h√° sobreposi√ß√£o de camadas.
    */
    height: 85vh;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    z-index: 2;
}

/* 
No hover, a imagem sofre uma leve transforma√ß√£o ‚Äì um zoom e uma rota√ß√£o m√≠nima, simulando uma rea√ß√£o r√°pida do sistema visual. √â a sinergia entre o est√≠mulo externo e a resposta neural, garantindo dinamismo sem perda de qualidade.
*/
.content-image:hover {
    transform: scale(1.03) rotate(1deg);
}

/* 
O rodap√© organiza os elementos com espa√ßamento largo, lembrando um layout de alta performance ‚Äì tudo devidamente distribu√≠do pra que o processamento visual n√£o fique sobrecarregado. Cada detalhe conta pra manter a estabilidade da interface.
*/
footer {
    /*
    - Espa√ßamento largo para evitar sobrecarga visual:
        + A propriedade justify-content: space-between; garante que os elementos dentro do rodap√© fiquem espa√ßados uniformemente, evitando aglomera√ß√£o de informa√ß√µes e facilitando o processamento visual pelo usu√°rio.
    - Distribui√ß√£o organizada e fluidez:
        + Como um sistema de alta performance que distribui cargas para otimizar efici√™ncia, o rodap√© organiza os elementos com espa√ßamento e alinhamento cuidadosos, promovendo clareza.
    */
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 75px;
    font-weight: 100;
}

/* 
Define a largura de um container no rodap√© ‚Äì simples, mas essencial pra manter o equil√≠brio visual e estrutural, como um par√¢metro calibrado em um sistema HPC.
*/
footer div {
    width: 64px;
}

/* 
Responsividade ajustada como se fosse um sistema de escalabilidade em tempo real. Quando a tela diminui, os elementos se reorganizam para manter a performance visual, sem sacrificar o design ‚Äì tipo um algoritmo que adapta a densidade do c√≥digo conforme a carga.

Resumindo:
- Centraliza e reorganiza elementos de maneira inteligente para evitar "choques visuais".
- Reduz proporcionalmente dimens√µes e espa√ßos para otimizar o design em dispositivos m√≥veis.
- Usa propriedades como transform, vh, e media queries para promover fluidez sem perder a identidade visual.
*/

@keyframes metal-shine {
    0% { background-position: -100% 0; }
    100% { background-position: 200% 0; }
}
@media (max-width: 768px) {
    /*
    - Assim como um algoritmo de HPC que ajusta dinamicamente a carga para manter a performance, este snippet adapta os elementos do layout para funcionar bem em telas menores, redistribuindo informa√ß√µes de maneira eficiente e mantendo a hierarquia visual.
    - Configura estilos espec√≠ficos para telas com largura m√°xima de 768px, ou seja, dispositivos m√≥veis ou tablets.
        + Garante que a interface seja responsiva e acess√≠vel em diferentes tamanhos de tela.
    */
    header {
        padding-left: 25px; /* Compensa√ß√£o de espa√ßamento lateral */
    }

    .content-text {
        transform: translateX(0%);
        top: 80px;
        font-size: 1rem;     /* Redu√ß√£o para leitura perif√©rica */
        width: 100px;
        text-align: center;  /* Centraliza√ß√£o focal */
    }

    .content-image {
        height: 70vh;       /* Redu√ß√£o proporcional do elemento */
    }

    footer {
        padding: 0 25px;    /* Compacta√ß√£o controlada */
    }
}

/* 
========== OTIMIZA√á√ïES GLOBAIS ==========
1. Transi√ß√µes sincronizadas com taxa de atualiza√ß√£o neural
2. Hierarquia visual baseada em z-index estratificado
3. Sistema de cores neurocompat√≠vel
4. Layout resistente a reflow
5. Renderiza√ß√£o GPU-acelerada
*/